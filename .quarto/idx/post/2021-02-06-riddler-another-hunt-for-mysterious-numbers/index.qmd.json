{"title":"Riddler: Another Hunt For Mysterious Numbers","markdown":{"yaml":{"title":"Riddler: Another Hunt For Mysterious Numbers","author":"Bas","date":"2021-02-06"},"containsRefs":false,"markdown":"\n\nThis week's [FiveThirtyEight Riddler Express](https://fivethirtyeight.com/features/can-you-randomly-move-the-tower/) is similar to the Riddler Classic of two weeks ago:\n\n>By all accounts, Riddler Nation had a lot of fun [hunting for the mysterious numbers](https://fivethirtyeight.com/features/can-you-hunt-for-the-mysterious-numbers/) a few weeks back. So here’s what we’re going to do: For the next four weeks, the Riddler Express will feature a similar puzzle that combines multiplication and logic. We’ll be calling these CrossProducts.\n>For your first weekly CrossProduct, there are five three-digit numbers — each belongs in a row of the table below, with one digit per cell. The products of the three digits of each number are shown in the rightmost column. Meanwhile, the products of the digits in the hundreds, tens and ones places, respectively, are shown in the bottom row.\n\n![](images/puzzle.png){width=\"500\"}\n\nTwo weeks ago, rather than searching for the solution manually, I [solved this problem with linear programming](/post/2021-01-22-riddler-can-you-hunt-for-the-mysterious-numbers) in Julia. The advantage of that approach is that it is easy to apply to this new problem again — it should be a matter of changing the input numbers. Let's see how it goes! Please refer to the aforementioned post for a more thorough explanation of the code.\n\n```julia\nusing JuMP, GLPK\nusing Primes: factor, primes\nusing DataStructures: DefaultDict\n\nrow_prods = [135, 45, 64, 280, 70];\ncol_prods = [3_000, 3_969, 640];\nprms = primes(1, 9);\n\nn_prms = length(prms);\nn_rows = length(row_prods);\nn_cols = length(col_prods);\n```\n\nNote that the only thing changed with respect to the previous post is that we initialized the problem with new `row_prods` and `col_prods`. The rest should be automatic.\n\n```julia\nrow_factors = factor.(Dict, row_prods);\ncol_factors = factor.(Dict, col_prods);\n\nrow_factors = [[DefaultDict(0, row_factors[row])[prms[i]] for i in 1:4] for row in 1:n_rows]\ncol_factors = [[DefaultDict(0, col_factors[col])[prms[i]] for i in 1:4] for col in 1:n_cols]\n```\n```\n5-element Array{Array{Int64,1},1}:\n [0, 3, 1, 0]\n [0, 2, 1, 0]\n [6, 0, 0, 0]\n [3, 0, 1, 1]\n [1, 0, 1, 1]\n3-element Array{Array{Int64,1},1}:\n [3, 1, 3, 0]\n [0, 4, 0, 2]\n [7, 0, 1, 0]\n```\n\nAgain, onto the actual problem definition.\n\n```julia\nmodel = Model(with_optimizer(GLPK.Optimizer))\n\n@variable(model, 0 <= x[1:n_rows, 1:n_cols, 1:n_prms], integer=true)\n```\n\nMake sure row and column prime multiplicities add up to the correct numbers.\n\n```julia\nfor i in 1:n_rows, p in 1:n_prms\n    @constraint(model, sum(x[i, :, p]) == row_factors[i][p])\nend\n\nfor j in 1:n_cols, p in 1:n_prms\n    @constraint(model, sum(x[:, j, p]) == col_factors[j][p])\nend\n```\n\nFinally, we want every cell to be an integer between 1 and 9, which means $2^{p_2}\\cdot 3^{p_3}\\cdot 5^{p_5}\\cdot 7^{p_7} \\le 9$, or $p_2\\log(2) + p_3\\log(3) + p_5\\log(5)+p_7\\log(7) \\le \\log(9)$, a constraint which is linear in its variables.\n\n```julia\nfor i in 1:n_rows, j in 1:n_cols\n\t@constraint(model, sum(x[i, j, :] .* log.(prms)) <= log(9))\nend\n```\n\nAnd that is all! Let JuMP do its magic and come up with a feasible solution. As an example, again we print out the number of times a 2 (the first prime) appears in every cell.\n\n```julia\nJuMP.optimize!(model)\n\nsolution = JuMP.value.(x);\n\nsolution[:, :, 1]\n```\n```\n5×3 Array{Float64,2}:\n 0.0  0.0  0.0\n 0.0  0.0  0.0\n 3.0  0.0  3.0\n 0.0  0.0  3.0\n 0.0  0.0  1.0\n```\n\nThe final solution to the riddle is then the product of every prime to the power of its multiplicity:\n\n```julia\n[[Int(prod(prms .^ solution[i, j, :])) for j in 1:n_cols] for i in 1:n_rows]\n```\n```\n5-element Array{Array{Int64,1},1}:\n [3, 9, 5]\n [5, 9, 1]\n [8, 1, 8]\n [5, 7, 8]\n [5, 7, 2]\n```\n\nWell, that was easy! For the first puzzle, the challenge was to come up with a model. From then on, it is just a matter of changing the inputs. It does feel a bit like cheating, though … I don't think I'll continue with these _CrossProduct_ puzzles in this way.\n","srcMarkdownNoYaml":"\n\nThis week's [FiveThirtyEight Riddler Express](https://fivethirtyeight.com/features/can-you-randomly-move-the-tower/) is similar to the Riddler Classic of two weeks ago:\n\n>By all accounts, Riddler Nation had a lot of fun [hunting for the mysterious numbers](https://fivethirtyeight.com/features/can-you-hunt-for-the-mysterious-numbers/) a few weeks back. So here’s what we’re going to do: For the next four weeks, the Riddler Express will feature a similar puzzle that combines multiplication and logic. We’ll be calling these CrossProducts.\n>For your first weekly CrossProduct, there are five three-digit numbers — each belongs in a row of the table below, with one digit per cell. The products of the three digits of each number are shown in the rightmost column. Meanwhile, the products of the digits in the hundreds, tens and ones places, respectively, are shown in the bottom row.\n\n![](images/puzzle.png){width=\"500\"}\n\nTwo weeks ago, rather than searching for the solution manually, I [solved this problem with linear programming](/post/2021-01-22-riddler-can-you-hunt-for-the-mysterious-numbers) in Julia. The advantage of that approach is that it is easy to apply to this new problem again — it should be a matter of changing the input numbers. Let's see how it goes! Please refer to the aforementioned post for a more thorough explanation of the code.\n\n```julia\nusing JuMP, GLPK\nusing Primes: factor, primes\nusing DataStructures: DefaultDict\n\nrow_prods = [135, 45, 64, 280, 70];\ncol_prods = [3_000, 3_969, 640];\nprms = primes(1, 9);\n\nn_prms = length(prms);\nn_rows = length(row_prods);\nn_cols = length(col_prods);\n```\n\nNote that the only thing changed with respect to the previous post is that we initialized the problem with new `row_prods` and `col_prods`. The rest should be automatic.\n\n```julia\nrow_factors = factor.(Dict, row_prods);\ncol_factors = factor.(Dict, col_prods);\n\nrow_factors = [[DefaultDict(0, row_factors[row])[prms[i]] for i in 1:4] for row in 1:n_rows]\ncol_factors = [[DefaultDict(0, col_factors[col])[prms[i]] for i in 1:4] for col in 1:n_cols]\n```\n```\n5-element Array{Array{Int64,1},1}:\n [0, 3, 1, 0]\n [0, 2, 1, 0]\n [6, 0, 0, 0]\n [3, 0, 1, 1]\n [1, 0, 1, 1]\n3-element Array{Array{Int64,1},1}:\n [3, 1, 3, 0]\n [0, 4, 0, 2]\n [7, 0, 1, 0]\n```\n\nAgain, onto the actual problem definition.\n\n```julia\nmodel = Model(with_optimizer(GLPK.Optimizer))\n\n@variable(model, 0 <= x[1:n_rows, 1:n_cols, 1:n_prms], integer=true)\n```\n\nMake sure row and column prime multiplicities add up to the correct numbers.\n\n```julia\nfor i in 1:n_rows, p in 1:n_prms\n    @constraint(model, sum(x[i, :, p]) == row_factors[i][p])\nend\n\nfor j in 1:n_cols, p in 1:n_prms\n    @constraint(model, sum(x[:, j, p]) == col_factors[j][p])\nend\n```\n\nFinally, we want every cell to be an integer between 1 and 9, which means $2^{p_2}\\cdot 3^{p_3}\\cdot 5^{p_5}\\cdot 7^{p_7} \\le 9$, or $p_2\\log(2) + p_3\\log(3) + p_5\\log(5)+p_7\\log(7) \\le \\log(9)$, a constraint which is linear in its variables.\n\n```julia\nfor i in 1:n_rows, j in 1:n_cols\n\t@constraint(model, sum(x[i, j, :] .* log.(prms)) <= log(9))\nend\n```\n\nAnd that is all! Let JuMP do its magic and come up with a feasible solution. As an example, again we print out the number of times a 2 (the first prime) appears in every cell.\n\n```julia\nJuMP.optimize!(model)\n\nsolution = JuMP.value.(x);\n\nsolution[:, :, 1]\n```\n```\n5×3 Array{Float64,2}:\n 0.0  0.0  0.0\n 0.0  0.0  0.0\n 3.0  0.0  3.0\n 0.0  0.0  3.0\n 0.0  0.0  1.0\n```\n\nThe final solution to the riddle is then the product of every prime to the power of its multiplicity:\n\n```julia\n[[Int(prod(prms .^ solution[i, j, :])) for j in 1:n_cols] for i in 1:n_rows]\n```\n```\n5-element Array{Array{Int64,1},1}:\n [3, 9, 5]\n [5, 9, 1]\n [8, 1, 8]\n [5, 7, 8]\n [5, 7, 2]\n```\n\nWell, that was easy! For the first puzzle, the challenge was to come up with a model. From then on, it is just a matter of changing the inputs. It does feel a bit like cheating, though … I don't think I'll continue with these _CrossProduct_ puzzles in this way.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"html-math-method":"katex","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.33","theme":["cosmo","brand"],"title":"Riddler: Another Hunt For Mysterious Numbers","author":"Bas","date":"2021-02-06"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}